// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file protobuf/proto/v1/wheresmyum.proto (package wheresmyum.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { EventOutboundFungibleTokenTransfer } from "@penumbra-zone/protobuf/penumbra/core/component/shielded_pool/v1/shielded_pool_pb";
import { TransactionId } from "@penumbra-zone/protobuf/penumbra/core/txhash/v1/txhash_pb";

/**
 * @generated from message wheresmyum.v1.Transfer
 */
export class Transfer extends Message<Transfer> {
  /**
   * The event triggering the transfer.
   *
   * @generated from field: @penumbra-zone/protobuf/penumbra.core.component.shielded_pool.v1.EventOutboundFungibleTokenTransfer transfer = 1;
   */
  transfer?: EventOutboundFungibleTokenTransfer;

  /**
   * The transaction (potentially missing) which triggered the transfer.
   *
   * @generated from field: @penumbra-zone/protobuf/penumbra.core.txhash.v1.TransactionId tx = 2;
   */
  tx?: TransactionId;

  /**
   * The height at which the transfer was initiated.
   *
   * @generated from field: uint64 height = 3;
   */
  height = protoInt64.zero;

  /**
   * The time at which the transfer was initiated.
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;

  constructor(data?: PartialMessage<Transfer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wheresmyum.v1.Transfer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transfer", kind: "message", T: EventOutboundFungibleTokenTransfer },
    { no: 2, name: "tx", kind: "message", T: TransactionId },
    { no: 3, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "timestamp", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transfer {
    return new Transfer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transfer {
    return new Transfer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transfer {
    return new Transfer().fromJsonString(jsonString, options);
  }

  static equals(a: Transfer | PlainMessage<Transfer> | undefined, b: Transfer | PlainMessage<Transfer> | undefined): boolean {
    return proto3.util.equals(Transfer, a, b);
  }
}

/**
 * @generated from message wheresmyum.v1.TransfersRequest
 */
export class TransfersRequest extends Message<TransfersRequest> {
  constructor(data?: PartialMessage<TransfersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wheresmyum.v1.TransfersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransfersRequest {
    return new TransfersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransfersRequest {
    return new TransfersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransfersRequest {
    return new TransfersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TransfersRequest | PlainMessage<TransfersRequest> | undefined, b: TransfersRequest | PlainMessage<TransfersRequest> | undefined): boolean {
    return proto3.util.equals(TransfersRequest, a, b);
  }
}

/**
 * @generated from message wheresmyum.v1.TransfersResponse
 */
export class TransfersResponse extends Message<TransfersResponse> {
  /**
   * @generated from field: repeated wheresmyum.v1.Transfer transfers = 1;
   */
  transfers: Transfer[] = [];

  constructor(data?: PartialMessage<TransfersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wheresmyum.v1.TransfersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transfers", kind: "message", T: Transfer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransfersResponse {
    return new TransfersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransfersResponse {
    return new TransfersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransfersResponse {
    return new TransfersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TransfersResponse | PlainMessage<TransfersResponse> | undefined, b: TransfersResponse | PlainMessage<TransfersResponse> | undefined): boolean {
    return proto3.util.equals(TransfersResponse, a, b);
  }
}

